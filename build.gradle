plugins {
    id "java-library"
    id "eclipse"
    id "edu.wpi.first.GradleRIO" version "2025.3.2"
    id "org.ajoberstar.grgit" version "4.1.1"
    id "maven-publish"
    id "io.github.mosadie.vendorJSON" version "1.0"
}

group = archivesGroup

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

if (System.getProperty("local")) {
	println("This is a local Compile:")
	version = "local"
}
else {
	println("This is a versioned Compile:")
	version = LibraryVersion
}

println("LibraryVersion=" + LibraryVersion + "; compile version=" + version)

// Currently does not work
// This task updates the vendor json file for this project to the specified version.					
vendorJSON {
    fileName = jsonFileName
    version = LibraryVersion
    addJavaArtifact(archivesGroup, archivesBaseName, LibraryVersion)
}

// Generates Source and Javadoc jars when building.
java {
    withJavadocJar();
    withSourcesJar();
}

repositories {
	// This is needed to fix problem with the url below redirecting to an http (insecure) url.
	//maven {
    //    url "https://www.revrobotics.com/content/sw/color-sensor-v3/sdk/maven/"
    //    allowInsecureProtocol = true
    //}

	mavenLocal()
	mavenCentral()
}

// Setup eclipse classpath settings, so the javadoc and sources are available in eclipse
eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}


// Defining dependencies. In this case, WPILib (+ friends), and some vendor libraries (NavX, CTRE)
dependencies {
    implementation wpi.java.deps.wpilib()
    implementation wpi.java.vendor.java()
	implementation group: 'gov.nist.math', name: 'jama', version: '1.0.3'

	implementation 'org.java-websocket:Java-WebSocket:1.4.1'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    // For reference, here are a few more of the easy to add libraries not currently used:
   	//implementation pathfinder() (Jaci's)
   	//implementation openrioMatchData()

   	// Quick guide to keywords:
   	// api is for libraries that are expected to be needed in the main robot project.
   	// implementation is for libraries that will not be needed in the main robot project.
   	// (Both api and implementation keywords will have the library automatically downloaded with 3128-common)
   	// compileOnly expects the dependency to be provided somewhere else. (Ex. by a main robot project)
   	// compile means include in the output library jar (see below).
}

// These next definitions (branch and hash) attempt to find extra information to add to the the manifest of
// the robot program jar file.

// Returns either the name of the current branch, or an empty string if no git repo is found.
def branch = { ->
    if (grgit == null) { // If there's no git repo.
        return ""
    }

    return grgit.branch.current().getName()
}

// Returns either the short hash of the last commit or an empty string if no git repo is found.
def hash = { ->
    if (grgit == null) { // If there's no git repo.
        return ""
    }
    
    return grgit.head().abbreviatedId
}

// Setting up 3128-common Jar File. In this case, adding version information to jar manifest.
jar {
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
       	attributes("LibraryVersion": LibraryVersion)	// from gradle.properties file.
       	attributes("Time": new Date().format("yyyy-MM-dd HH:mm:ss"))
       	attributes("User": System.getProperty("user.name"))
       	attributes("Branch": branch())
       	attributes("Commit": hash())
	}
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

// Create Sources Jar
//task sourcesJar(type: Jar, dependsOn: classes) {
//    classifier = 'sources'
//    from sourceSets.main.allSource
//}

// When Javadoc is created (./gradlew.bat javadoc) it will be in this directory in the project folder.
javadoc {
    destinationDir = file("doc")
    title = "3128-common"
    options.overview = "src/main/resources/overview.html"
    // These options obsolete with move to JDK 17.
    //options.addBooleanOption "-no-module-directories", true
    //options.addBooleanOption "-frames", true
    // This option supresses all Javadoc warnings. Some warnings are usefull but many
    // we ignore. Should review warnings with any significant changes to the library.
	options.addStringOption('Xdoclint:all,-missing', '-quiet')
}

// Create Javadoc Jar
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}

// Additional artifacts to publish for JitPack
artifacts {
    archives sourcesJar
    archives javadocJar
}

// Required as of gradle 7.1.1. Configures PublishToMavenLocal task. This task is required to get our
// jars published to the local maven repository on this PC for consumption by robot projects on this PC.
// The PubishToMavenLocal task is executed in the eclipse .launch files that run this build.
publishing {
    publications {
        common(MavenPublication) {
	    	artifactId = '3128-common'
            from components.java
        }
    }
}